// All global variables in here!

// ~~~~~~~~~~~~ config options ~~~~~~~~~~~ //

// Allow Native built in animations
$enable-native-animations: true !default;

// Enable or Disable hvr-css Animations
$hvr-animations-disabled: false !default;

// * Open Prop in house variables

// * Shadows
$shadow-1: var(--shadow-1);
$shadow-2: var(--shadow-2);
$shadow-3: var(--shadow-3);
$shadow-4: var(--shadow-4);
$shadow-5: var(--shadow-5);
$shadow-6: var(--shadow-6);

// shadows map
$shadows: (
  'shadow-1': $shadow-1,
  'shadow-2': $shadow-2,
  'shadow-3': $shadow-3,
  'shadow-4': $shadow-4,
  'shadow-5': $shadow-5,
  'shadow-6': $shadow-6,
) !default;

// inner shadows
$inner-shadow-0: var(--inner-shadow-0);
$inner-shadow-1: var(--inner-shadow-1);
$inner-shadow-2: var(--inner-shadow-2);
$inner-shadow-3: var(--inner-shadow-3);
$inner-shadow-4: var(--inner-shadow-4);

// inner shadows map
$inner-shadows: (
  'inner-shadow-0': $inner-shadow-0,
  'inner-shadow-1': $inner-shadow-1,
  'inner-shadow-2': $inner-shadow-2,
  'inner-shadow-3': $inner-shadow-3,
  'inner-shadow-4': $inner-shadow-4,
) !default;

// * Borders
// Border Sizes
$border-size-1: var(--border-size-1);
$border-size-2: var(--border-size-2);
$border-size-3: var(--border-size-3);
$border-size-4: var(--border-size-4);
$border-size-5: var(--border-size-5);

// border sizes map
$border-sizes: (
  'border-size-1': $border-size-1,
  'border-size-2': $border-size-2,
  'border-size-3': $border-size-3,
  'border-size-4': $border-size-4,
  'border-size-5': $border-size-5,
) !default;

// Border radii
$radius-1: var(--radius-1);
$radius-2: var(--radius-2);
$radius-3: var(--radius-3);
$radius-4: var(--radius-4);
$radius-5: var(--radius-5);
$radius-round: var(--radius-round);

// border radius map
$border-radii: (
  'radius-1': $radius-1,
  'radius-2': $radius-2,
  'radius-3': $radius-3,
  'radius-4': $radius-4,
  'radius-5': $radius-5,
  'radius-round': $radius-round,
) !default;

// Border radii blobs
$radius-blob-1: var(--radius-blob-1);
$radius-blob-2: var(--radius-blob-2);
$radius-blob-3: var(--radius-blob-3);
$radius-blob-4: var(--radius-blob-4);
$radius-blob-5: var(--radius-blob-5);

// border radius blobs map
$radii-blobs: (
  'radius-blob-1': $radius-blob-1,
  'radius-blob-2': $radius-blob-2,
  'radius-blob-3': $radius-blob-3,
  'radius-blob-4': $radius-blob-4,
  'radius-blob-5': $radius-blob-5,
) !default;

// * Z-Index
// z-index layers
$layer-1: var(--layer-1);
$layer-2: var(--layer-2);
$layer-3: var(--layer-3);
$layer-4: var(--layer-4);
$layer-5: var(--layer-5);
$layer-important: var(--layer-important);

// z-index layers map
$layers: (
  'layer-1': $layer-1,
  'layer-2': $layer-2,
  'layer-3': $layer-3,
  'layer-4': $layer-4,
  'layer-5': $layer-5,
  'layer-important': $layer-important,
) !default;

// * Aspect Ratio
// aspect ratios
$ratio-square: var(--ratio-square);
$ratio-landscape: var(--ratio-landscape);
$ratio-portrait: var(--ratio-portrait);
$ratio-widescreen: var(--ratio-widescreen);
$ratio-ultrawide: var(--ratio-ultrawide);
$ratio-golden: var(--ratio-golden);

// aspect ratios map
$ratios: (
  'ratio-square': $ratio-square,
  'ratio-landscape': $ratio-landscape,
  'ratio-portrait': $ratio-portrait,
  'ratio-widescreen': $ratio-widescreen,
  'ratio-ultrawide': $ratio-ultrawide,
  'ratio-golden': $ratio-golden,
) !default;

// * Typography
// font families
$font-sans: var(--font-sans);
$font-serif: var(--font-serif);
$font-mono: var(--font-mono);

// font weights
$font-weight-1: var(--font-weight-1);
$font-weight-2: var(--font-weight-2);
$font-weight-3: var(--font-weight-3);
$font-weight-4: var(--font-weight-4);
$font-weight-5: var(--font-weight-5);
$font-weight-6: var(--font-weight-6);
$font-weight-7: var(--font-weight-7);
$font-weight-8: var(--font-weight-8);
$font-weight-9: var(--font-weight-9);

// font weights map
$font-weights: (
  'font-weight-1': $font-weight-1,
  'font-weight-2': $font-weight-2,
  'font-weight-3': $font-weight-3,
  'font-weight-4': $font-weight-4,
  'font-weight-5': $font-weight-5,
  'font-weight-6': $font-weight-6,
  'font-weight-7': $font-weight-7,
  'font-weight-8': $font-weight-8,
  'font-weight-9': $font-weight-9,
) !default;

// font letter spacings as font spacings
$font-spacing-0: var(--font-letterspacing-0);
$font-spacing-1: var(--font-letterspacing-1);
$font-spacing-2: var(--font-letterspacing-2);
$font-spacing-3: var(--font-letterspacing-3);
$font-spacing-4: var(--font-letterspacing-4);
$font-spacing-5: var(--font-letterspacing-5);
$font-spacing-6: var(--font-letterspacing-6);
$font-spacing-7: var(--font-letterspacing-7);

// font spacings map
$font-spacings: (
  'font-spacing-0': $font-spacing-0,
  'font-spacing-1': $font-spacing-1,
  'font-spacing-2': $font-spacing-2,
  'font-spacing-3': $font-spacing-3,
  'font-spacing-4': $font-spacing-4,
  'font-spacing-5': $font-spacing-5,
  'font-spacing-6': $font-spacing-6,
  'font-spacing-7': $font-spacing-7,
) !default;

// font line heights as font heights
$font-height-00: var(--font-lineheight-00);
$font-height-0: var(--font-lineheight-0);
$font-height-1: var(--font-lineheight-1);
$font-height-2: var(--font-lineheight-2);
$font-height-3: var(--font-lineheight-3);
$font-height-4: var(--font-lineheight-4);
$font-height-5: var(--font-lineheight-5);

// font heights map
$font-heights: (
  'font-height-00': $font-height-00,
  'font-height-0': $font-height-0,
  'font-height-1': $font-height-1,
  'font-height-2': $font-height-2,
  'font-height-3': $font-height-3,
  'font-height-4': $font-height-4,
  'font-height-5': $font-height-5,
) !default;

// font sizes
$font-size-00: var(--font-size-00);
$font-size-0: var(--font-size-0);
$font-size-1: var(--font-size-1);
$font-size-2: var(--font-size-2);
$font-size-3: var(--font-size-3);
$font-size-4: var(--font-size-4);
$font-size-5: var(--font-size-5);
$font-size-6: var(--font-size-6);
$font-size-7: var(--font-size-7);
$font-size-8: var(--font-size-8);

// font sizes map
$font-sizes: (
  'font-size-00': $font-size-00,
  'font-size-0': $font-size-0,
  'font-size-1': $font-size-1,
  'font-size-2': $font-size-2,
  'font-size-3': $font-size-3,
  'font-size-4': $font-size-4,
  'font-size-5': $font-size-5,
  'font-size-6': $font-size-6,
  'font-size-7': $font-size-7,
  'font-size-8': $font-size-8,
) !default;

// font size fluid as font fluid
$font-fluid-0: var(--font-size-fluid-0);
$font-fluid-1: var(--font-size-fluid-1);
$font-fluid-2: var(--font-size-fluid-2);
$font-fluid-3: var(--font-size-fluid-3);

// * Sizes
// relative sizes
$size-000: var(--size-000);
$size-00: var(--size-00);
$size-1: var(--size-1);
$size-2: var(--size-2);
$size-3: var(--size-3);
$size-4: var(--size-4);
$size-5: var(--size-5);
$size-6: var(--size-6);
$size-7: var(--size-7);
$size-8: var(--size-8);
$size-9: var(--size-9);
$size-10: var(--size-10);
$size-11: var(--size-11);
$size-12: var(--size-12);
$size-13: var(--size-13);
$size-14: var(--size-14);
$size-15: var(--size-15);

// sizes map
$sizes: (
  'size-000': $size-000,
  'size-00': $size-00,
  'size-1': $size-1,
  'size-2': $size-2,
  'size-3': $size-3,
  'size-4': $size-4,
  'size-5': $size-5,
  'size-6': $size-6,
  'size-7': $size-7,
  'size-8': $size-8,
  'size-9': $size-9,
  'size-10': $size-10,
  'size-11': $size-11,
  'size-12': $size-12,
  'size-13': $size-13,
  'size-14': $size-14,
  'size-15': $size-15,
) !default;

// fluid sizes
$fluid-size-1: var(--size-fluid-1);
$fluid-size-2: var(--size-fluid-2);
$fluid-size-3: var(--size-fluid-3);
$fluid-size-4: var(--size-fluid-4);
$fluid-size-5: var(--size-fluid-5);
$fluid-size-6: var(--size-fluid-6);
$fluid-size-7: var(--size-fluid-7);
$fluid-size-8: var(--size-fluid-8);
$fluid-size-9: var(--size-fluid-9);
$fluid-size-10: var(--size-fluid-10);

// fluid sizes map
$sizes-fluid: (
  'fluid-size-1': $fluid-size-1,
  'fluid-size-2': $fluid-size-2,
  'fluid-size-3': $fluid-size-3,
  'fluid-size-4': $fluid-size-4,
  'fluid-size-5': $fluid-size-5,
  'fluid-size-6': $fluid-size-6,
  'fluid-size-7': $fluid-size-7,
  'fluid-size-8': $fluid-size-8,
  'fluid-size-9': $fluid-size-9,
  'fluid-size-10': $fluid-size-10,
) !default;

// content sizes
$content-size-1: var(--size-content-1);
$content-size-2: var(--size-content-2);
$content-size-3: var(--size-content-3);

// content sizes map
$sizes-content: (
  'content-size-1': $content-size-1,
  'content-size-2': $content-size-2,
  'content-size-3': $content-size-3,
) !default;

// header sizes
$header-size-1: var(--size-header-1);
$header-size-2: var(--size-header-2);
$header-size-3: var(--size-header-3);

// header sizes map
$sizes-header: (
  'header-size-1': $header-size-1,
  'header-size-2': $header-size-2,
  'header-size-3': $header-size-3,
) !default;

// * Animations
// indeterminate state animations
$animation-spin: var(--animation-spin);
$animation-ping: var(--animation-ping);
$animation-blink: var(--animation-blink);
$animation-float: var(--animation-float);
$animation-bounce: var(--animation-bounce);
$animation-pulse: var(--animation-pulse);

// indeterminate state animations map
$animations: (
  'animation-spin': $animation-spin,
  'animation-ping': $animation-ping,
  'animation-blink': $animation-blink,
  'animation-float': $animation-float,
  'animation-bounce': $animation-bounce,
  'animation-pulse': $animation-pulse,
) !default;

// # attention grabber animations
// We won't do maps for these, we will do their helper classes manually without sass auto generation as the case with animations.
$animation-fade-in: var(--animation-fade-in);
$animation-fade-out: var(--animation-fade-out);

// shake animations
$animation-shake-x: var(--animation-shake-x);
$animation-shake-y: var(--animation-shake-y);

// exit animations
$animation-slide-out-up: var(--animation-slide-out-up);
$animation-slide-out-down: var(--animation-slide-out-down);
$animation-slide-out-left: var(--animation-slide-out-left);
$animation-slide-out-right: var(--animation-slide-out-right);

// entrace animations
$animation-slide-in-up: var(--animation-slide-in-up);
$animation-slide-in-down: var(--animation-slide-in-down);
$animation-slide-in-left: var(--animation-slide-in-left);
$animation-slide-in-right: var(--animation-slide-in-right);

// * Easings
// Since all easings are from 1 to 5, we will just loop through 5 for auto generation without making the maps for each ease group.

// ease
$ease-1: var(--ease-1);
$ease-2: var(--ease-2);
$ease-3: var(--ease-3);
$ease-4: var(--ease-4);
$ease-5: var(--ease-5);

// ease ins
$ease-in-1: var(--ease-in-1);
$ease-in-2: var(--ease-in-2);
$ease-in-3: var(--ease-in-3);
$ease-in-4: var(--ease-in-4);
$ease-in-5: var(--ease-in-5);

// ease outs
$ease-out-1: var(--ease-out-1);
$ease-out-2: var(--ease-out-2);
$ease-out-3: var(--ease-out-3);
$ease-out-4: var(--ease-out-4);
$ease-out-5: var(--ease-out-5);

// ease in outs
$ease-in-out-1: var(--ease-in-out-1);
$ease-in-out-2: var(--ease-in-out-2);
$ease-in-out-3: var(--ease-in-out-3);
$ease-in-out-4: var(--ease-in-out-4);
$ease-in-out-5: var(--ease-in-out-5);

// ease elastics
$ease-elastic-1: var(--ease-elastic-1);
$ease-elastic-2: var(--ease-elastic-2);
$ease-elastic-3: var(--ease-elastic-3);
$ease-elastic-4: var(--ease-elastic-4);
$ease-elastic-5: var(--ease-elastic-5);

// ease squishies
$ease-squish-1: var(--ease-squish-1);
$ease-squish-2: var(--ease-squish-2);
$ease-squish-3: var(--ease-squish-3);
$ease-squish-4: var(--ease-squish-4);
$ease-squish-5: var(--ease-squish-5);

// ease steps
$ease-step-1: var(--ease-step-1);
$ease-step-2: var(--ease-step-2);
$ease-step-3: var(--ease-step-3);
$ease-step-4: var(--ease-step-4);
$ease-step-5: var(--ease-step-5);

/* custom serato variables */
// * stuff that is still missing in open props, perhaps!

// list styles
$list-styles: (
  'auto': auto,
  'none': none,
  'circle': circle,
  'square': square,
  'disc': disc,
  'decimal': decimal,
  'disclosure-open': disclosure-open,
  'disclosure-closed': disclosure-closed,
);

// Border styles
$border-styles: (
  'auto': auto,
  'dashed': dashed,
  'dotted': dotted,
  'double': double,
  'groove': groove,
  'ridge': ridge,
  'solid': solid,
  'inset': inset,
  'outset': outset,
);

// responsive spacings -- only for the horizontal (x) axis eg. width not height, for height use the default spacings!
$responsive-spacing-values: (
  'small': 1.5vw,
  'normal': 2.5vw,
  'medium': 6.5vw,
  'large': 10vw,
) !default;

// opacities
$opacity-none: 0;
$opacity-low: 0.5;
$opacity-medium: 0.6;
$opacity-normal: 1;

$opacities: (
  'none': $opacity-none,
  'low': $opacity-low,
  'medium': $opacity-medium,
  'normal': $opacity-normal,
) !default;

// transitions
$default-transition: all 0.2s ease-in-out !default;
$transition-smooth: all 0.3s ease !default;
$transition-colors: color 0.2s ease-in-out !default;
$transition-linear: all 0.2s linear !default;
$transition-opacity: opacity 0.15s linear !default;
$transition-height: height 0.35s ease !default;
$transition-width: width 0.35s ease !default;

// crafted width measures
$width-auto: auto;
$width-none: 0;
$width-small: 15%;
$width-normal: 25%;
$width-medium: 50%;
$width-full: 100%;
$width-content: fit-content;
$width-viewport: 100vw;

// crafted height measures
$height-auto: auto;
$height-none: 0;
$height-small: 15%;
$height-normal: 25%;
$height-medium: 50%;
$height-full: 100%;
$height-content: fit-content;
$height-viewport: 100vh;

// gap variables & map
$gap-0: 0;
$gap-00: $size-1;
$gap-1: $size-2;
$gap-2: $size-5;
$gap-3: $size-7;
$gap-4: $fluid-size-5;
$gap-5: $fluid-size-6;
$gap-6: $fluid-size-7;

$gap-values: (
  '0': $gap-0,
  '00': $gap-00,
  '1': $gap-1,
  '2': $gap-2,
  '3': $gap-3,
  '4': $gap-4,
  '5': $gap-5,
  '6': $gap-6,
) !default;

// margin and padding
$spacings: (margin, padding) !default;
$spacing-directions: (top, right, bottom, left) !default;
$responsive-spacing-directions: (left, right) !default;
$spacing-horizontal: 'x' !default;
$spacing-vertical: 'y' !default;
$spacing-values: (
  '0': 0,
  '1': 0.25rem,
  '2': 0.5rem,
  '3': 0.75rem,
  '4': 1rem,
  '5': 1.5rem,
  '6': 3rem,
  '7': 4rem,
  '8': 5rem,
  '9': 6rem,
  'auto': auto,
) !default;

// * default variables
$default-padding: $size-2;
$elements-padding: $size-2 $size-3;

$default-fontWeight: $font-weight-4;
$default-fontSize: $font-size-1;
$default-borderRadius: $radius-2;
$default-borderWidth: $border-size-2;

$color-parent: inherit;
$color-current: currentColor;
$color-transparent: transparent;
