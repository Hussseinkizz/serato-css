// Everything about typography here...
@use '../utilities/global-variables' as *;
@use '../themes/colors/color-variables' as *;

// Generate font weight classes
@each $font-weight-name, $value in $font-weights {
  :where(.font-#{$font-weight-name}) {
    font-weight: $value;
  }
}

// align text
$text-alignments: (center, justify, left, right);

@each $text-alignment in $text-alignments {
  :where(.text-align-#{$text-alignment}) {
    text-align: $text-alignment;
  }
}

:where(.text-capitalize) {
  text-transform: capitalize;
}

:where(.text-lowercase) {
  text-transform: lowercase;
}

:where(.text-uppercase) {
  text-transform: uppercase;
}

:where(.font-italic) {
  font-style: italic;
}

:where(.text-underlined) {
  text-decoration: underline;
}

// font combos
:where(.font-heading) {
  font-size: $size-9;
  font-weight: bold; // fallback
  font-weight: map-get($font-weights, bold);
  text-transform: uppercase;
  text-align: center;
}
:where(.font-subheading) {
  font-size: $size-7;
  font-weight: medium; // fallback
  font-weight: map-get($font-weights, semibold);
  text-transform: capitalize;
}
:where(.font-small) {
  font-size: $size-2;
  font-weight: lighter; // fallback
  font-weight: map-get($font-weights, light);
  text-transform: lowercase;
}

// Text truncate
// Requires inline-block or block for proper styling
:where(.text-truncate) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

:where(.text-reset) {
  // We deliberately do NOT reset font-size or overflow-wrap / word-wrap.
  // for font family and defualt line height see the typography partial in base direcotry...
  font-family: inherit;
  font-style: normal;
  font-weight: normal; // fallback
  font-weight: map-get($font-weights, normal);
  line-height: inherit;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
}

// Paragraphs
//
// Style p element.

$paragraph-margin-bottom: 1rem !default;

// Generate font-size classes
// .font-size-normal {
//   font-size: $serato-font-size;
// }
// .font-size-small {
//   font-size: $font-size-small;
// }
// .font-size-large {
//   font-size: $font-size-large;
// }

@each $name, $font-size in $font-sizes {
  :where(.font-size-#{$name}) {
    font-size: $font-size;
  }
}

// text decorations
:where(.text-decoration-none) {
  text-decoration: none;
}
:where(.text-decoration-line-through) {
  text-decoration: line-through;
}
:where(.text-decoration-double) {
  text-decoration: double;
}
:where(.text-decoration-dotted) {
  text-decoration: dotted;
}
:where(.text-decoration-dashed) {
  text-decoration: dashed;
}
:where(.text-decoration-overline) {
  text-decoration: overline;
}
